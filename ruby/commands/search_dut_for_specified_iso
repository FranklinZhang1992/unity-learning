#!/usr/bin/ruby
require 'rexml/document'

include REXML

class String
  def to_bool
    return true if self =~ (/^(true|t|yes|y|1)$/i)
    return false if self.empty? || self =~ (/^(false|f|no|n|0)$/i)

    raise ArgumentError.new "invalid value: #{self}"
  end
end

def dut_list
  %w{canada ghan zambia vanderbilt leros bahrain chom airplane chob santana chog oxford zeppelin tulane loyola bentley jimi tufts caltech haiti poland holland brown patmos fiji yemen latvia morocco jordan uae malaysia myanmar}
end

class IsoSearcher
  WIN_2K12_REGEXP = 'win\S*2[0-9a-zA-Z]{0,}12'
  VERSION_REGEXP = "7.4.0-128"

  def find(dut_name)
    cmd = "curl --insecure -H \"Content-type: text/xml\" -d \"<requests output='XML'><request id='1' target='supernova'><watch/></request></requests>\" https://#{dut_name}.sn.stratus.com/doh/"
    result = %x{#{cmd}}
    return if !$?.success?
    root = Document.new(result).root
    empty = Element.new
    outputs_xml = (root.elements['response']||empty).elements['output']
    (outputs_xml||empty).elements.each do |output_xml|
      next unless output_xml.name == 'volume'
      is_iso = ((output_xml.elements['media-info']||empty).elements['isiso']||empty).text.to_bool
      if is_iso
        name = (output_xml.elements['name']||empty).text
        if name.match(Regexp.new(WIN_2K12_REGEXP))
          puts "DUT #{dut_name} contains a win2k12 VCD"
        end
      end
    end # end of volumes_xml block
  end
end

begin
  searcher = IsoSearcher.new
  dut_list.each do |dut|
    searcher.find(dut)
  end
rescue Exception => e
  puts "error: #{e}"
  raise
end
